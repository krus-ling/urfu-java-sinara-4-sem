package ru.guk.education.aspect;

import lombok.extern.slf4j.Slf4j;
import org.aspectj.lang.annotation.Aspect;
import org.aspectj.lang.annotation.Before;
import org.aspectj.lang.annotation.Pointcut;
import org.springframework.beans.factory.annotation.Value;
import org.springframework.stereotype.Component;
import ru.guk.education.exception.ApiLimitException;

@Aspect
@Component
@Slf4j
public class ApiCallAspect {

    @Value("${api.max.calls}")
    private int maxApiCalls;

    private int currentApiCalls = 0;

    private static final String ERROR_MESSAGE = "–ü—Ä–µ–≤—ã—à–µ–Ω–æ –º–∞–∫—Å–∏–º–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∑–∞–ø—Ä–æ—Å–æ–≤ API (%d) üò°! –ü–æ–ø—Ä–æ–±—É–π—Ç–µ –ø–æ–∑–∂–µ ü•∫";

    @Pointcut("execution(* ru.guk.education.controller.*.*(..))")
    public void apiMethods() {}

    @Before("apiMethods()")
    public void checkApiCalls() {
        if (currentApiCalls >= maxApiCalls) {
            log.warn("–ü—Ä–µ–≤—ã—à–µ–Ω –ª–∏–º–∏—Ç –≤—ã–∑–æ–≤–∞ API; —Ç–µ–∫—É—â–∏–π ‚Äî {}, –º–∞–∫—Å–∏–º—É–º ‚Äî {}", currentApiCalls + 1, maxApiCalls);
            throw new ApiLimitException(
                    ERROR_MESSAGE.formatted(maxApiCalls)
            );
        }

        currentApiCalls++;
    }
}
